

-- \set ECHO queries

/* ###################################################################################################### */
\ir './_trm.sql'
-- \ir './set-signal-color.sql'
-- \ir './test-begin.sql'
-- \pset pager on
\timing off
\set filename intershop/100-harfbuzz.sql
\set signal :green

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 1 }———:reset
drop schema if exists HARFBUZZ cascade;
create schema HARFBUZZ;

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 2 }———:reset
create table HARFBUZZ.x (
    nr          integer generated by default as identity,
    upem        jsonb,
    gid         jsonb,
    cluster     jsonb,
    x_advance   jsonb,
  primary key ( nr ) );

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 3 }———:reset
create type HARFBUZZ.hrfb_glyphadvance as (
    vnr         VNR.vnr,
    gid         integer,
    dx          float );

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 4 }———:reset
set role dba;
create function HARFBUZZ.metrics_from_text_as_rows( _font_path text, _text text )
  returns setof HARFBUZZ.hrfb_glyphadvance strict immutable language plpython3u as $$
  plpy.execute( 'select U.py_init()' ); ctx = GD[ 'ctx' ]
  import myharfbuzz as MHB
  nr = 0
  for part in MHB.metrics_from_text( ctx, _font_path, _text ).parts:
    nr += +1
    yield { 'vnr': [ nr, ], 'gid': part.gid, 'dx': part.dx, }
  $$;
reset role;

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 5 }———:reset
set role dba;
create function HARFBUZZ.metrics_from_text_as_jsonb( _font_path text, _text text )
  returns jsonb strict immutable language plpython3u as $$
  plpy.execute( 'select U.py_init()' ); ctx = GD[ 'ctx' ]
  import myharfbuzz as MHB
  import json as JSON
  return JSON.dumps( MHB.metrics_from_text( ctx, _font_path, _text ) )
  $$;
reset role;


/* ###################################################################################################### */
\echo :red ———{ :filename 6 }———:reset
\quit






