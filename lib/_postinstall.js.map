{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/_postinstall.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERSHOP-INTERTEXT/POSTINSTALL'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nFS                        = require 'fs'\nPATH                      = require 'path'\nCP                        = require 'child_process'\n\n\n#-----------------------------------------------------------------------------------------------------------\nget_path_to_python_site_packages = ->\n  whisper \"^77762-1^ trying to find path to Python site-packages\"\n  # cmd       = [ 'python3.6', '-c', \"import uharfbuzz as d; print( d.__path__[ 0 ] )\" ]\n  cmd       = 'python3.6 -c \"import uharfbuzz as d; print( d.__path__[ 0 ] )\"'\n  patterns  =\n    module_not_found: /ModuleNotFoundError: No module named /\n  settings  =\n    shell:      false\n    encoding:   'utf-8'\n  try\n    R = CP.execSync cmd, settings\n  catch error\n    if patterns.module_not_found.test error.message\n      warn CND.reverse \"^77762-2^ unable to find required Python module\"\n      urge CND.reverse \"^77762-3^ run `pip install uharfbuzz` (or, better, `pip3.6 install uharfbuzz`)\"\n      urge CND.reverse \"^77762-4^ to install the dependency and try again to `npm install intershop-intertext`\"\n    throw error\n  R = R.replace /\\n+$/, ''\n  help \"^77762-5^ found path to Python site-packages: #{rpr R}\"\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\ncreate_symlink = ( path_source, path_target ) ->\n  path_source_rel = PATH.relative process.cwd(), path_source\n  whisper \"^77762-6^ trying to create symlink at #{path_source_rel} to #{path_target}\"\n  try\n    FS.symlinkSync path_target, path_source\n  catch error\n    throw error unless error.code is 'EEXIST'\n    info \"^77762-7^ symlink at #{path_source_rel} already exists, skipping\"\n  unless error?\n    help \"^77762-8^ created symlink #{rpr path_source_rel} -> #{path_target}\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nsymlink_uharfbuzz = ->\n  path_to_symlink = PATH.resolve PATH.join __dirname, '../intershop_modules/uharfbuzz'\n  path_to_python  = get_path_to_python_site_packages()\n  create_symlink path_to_symlink, path_to_python\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nsymlink_db_test_trm = ->\n  path_to_symlink = PATH.resolve PATH.join __dirname, '../db/tests/_trm.sql'\n  path_to_trm     = PATH.resolve PATH.join __dirname, '../db/_trm.sql'\n  # debug '^33367^', { __dirname, }\n  # debug '^33367^', { path_to_symlink, }\n  # debug '^33367^', { path_to_trm, }\n  create_symlink path_to_symlink, path_to_trm\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  whisper \"^77762-9^ running postinstall script for intershop-intertext\"\n  symlink_uharfbuzz()\n  symlink_db_test_trm()\n\n\n\n"
  ]
}