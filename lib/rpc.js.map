{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/rpc.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,cAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAd5B;;;;;;;;EAqBA,MAAA,GAA4B,OAAA,CAAQ,QAAR,EArB5B;;;EAwBA,KAAA,GACE;IAAA,cAAA,EAAgB,CAAA;EAAhB,EAzBF;;;EA4BA,cAAA,GAAiB,QAAA,CAAE,IAAF,CAAA;AACjB,QAAA;IAAE,IAAY,wCAAZ;AAAA,aAAO,EAAP;;IACA,OAAA,CAAQ,CAAA,mBAAA,CAAA,CAAsB,IAAtB,CAAA,CAAR;IACA,CAAA,GAAI,KAAK,CAAC,cAAc,CAAE,IAAF,CAApB,GAA+B,MAAM,CAAC,cAAP,CAAsB,IAAtB;IACnC,IAAA,CAAK,CAAA,gBAAA,CAAA,CAAmB,IAAnB,CAAA,MAAA,CAAA,CAAgC,CAAC,CAAC,QAAQ,CAAC,SAA3C,CAAA,SAAA,CAAL;AACA,WAAO;EALQ,EA5BjB;;;EAoCA,IAAC,CAAA,YAAD,GAAgB,QAAA,CAAA,GAAE,CAAF,CAAA;IACd,KAAA,CAAM,0CAAN,EAAkD,CAAE,CAAF,CAAlD;AACA,WAAO;EAFO,EApChB;;;EAyCA,IAAC,CAAA,sBAAD,GAA0B,QAAA,CAAE,QAAF,EAAY,QAAZ,CAAA,EAAA;;;AAGxB,WAAO,MAAM,CAAC,sBAAP,CAAgC,cAAA,CAAe,QAAf,CAAhC,EAA2D,QAA3D;EAHiB,EAzC1B;;;;;;EAkDA,IAAC,CAAA,yBAAD,GAA6B,QAAA,CAAE,QAAF,EAAY,QAAZ,CAAA;AAC7B,QAAA,IAAA,EAAA;IAAE,IAAA,GAAY;IACZ,SAAA,GAAY;AACZ,WAAO,MAAM,CAAC,yBAAP,CAAmC,cAAA,CAAe,QAAf,CAAnC,EAA8D,QAA9D,EAAwE,IAAxE,EAA8E,SAA9E;EAHoB;AAlD7B",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERSHOP-INTERTEXT/RPC'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n# types                     = ( require 'intershop' ).types\n# { isa\n#   validate\n#   cast\n#   type_of }               = types.export()\nSVGTTF                    = require 'svgttf'\n\n#-----------------------------------------------------------------------------------------------------------\ncache =\n  fonts_by_paths: {}\n\n#-----------------------------------------------------------------------------------------------------------\nfont_from_path = ( path ) ->\n  return R if ( R = cache.fonts_by_paths[ path ] )?\n  whisper \"^347^ reading font #{path}\"\n  R = cache.fonts_by_paths[ path ] = SVGTTF.font_from_path path\n  urge \"^347^ read font #{path} with #{R.otjsfont.numGlyphs} outlines\"\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@get_fortytwo = ( P... ) ->\n  debug '^intershop-intertext/get_fortytwo@44556^', { P, }\n  return 42\n\n#-----------------------------------------------------------------------------------------------------------\n@pathdata_from_glyphidx = ( fontpath, glyphidx ) ->\n  # debug '^intershop-intertext/get_fortytwo@44556^', { fontpath, glyphidx, }\n  # T.eq ( SVGTTF.pathelement_from_glyphidx font, 23, 1000, [ [ 'translate', [ 100, ], ], ] ), \"<path transform='translate(100)' d='M373-631C373-652 368-694 325-694C285-694 260-659 260-630C260-598 283-588 304-588C321-588 339-597 349-607C338-547 300-476 234-422C221-410 220-409 220-405C220-402 223-395 230-395C249-395 373-514 373-631Z'/>\"\n  return SVGTTF.pathdata_from_glyphidx ( font_from_path fontpath ), glyphidx\n\n#-----------------------------------------------------------------------------------------------------------\n### NOT consider to wrap RPC methods so registry knows how to cast return values:\n@pathelement_from_glyphidx = returns 'text', ( fontpath, glyphidx ) ->\n###\n@pathelement_from_glyphidx = ( fontpath, glyphidx ) ->\n  size      = 1000\n  transform = null\n  return SVGTTF.pathelement_from_glyphidx ( font_from_path fontpath ), glyphidx, size, transform\n\n\n\n\n\n\n\n"
  ]
}